DROP TABLE IF EXISTS BDDLTRN.STG_CNM_TRANSPOSE_DATOS_ADICIONALES_ASEGURADO_DISTINCT PURGE;

CREATE TABLE IF NOT EXISTS BDDLTRN.STG_CNM_TRANSPOSE_DATOS_ADICIONALES_ASEGURADO_DISTINCT 
AS 
select distinct *
from BDDLTRN.STG_CNM_TRANSPOSE_DATOS_ADICIONALES_ASEGURADO;

--INVALIDATE METADATA;
--EXTRACCION DE DATOS DE TRANSPONSE
DROP TABLE IF EXISTS BDDLTRN.STG_GMM_ASEG_AD_CBZA_GET PURGE;

CREATE TABLE IF NOT EXISTS BDDLTRN.STG_GMM_ASEG_AD_CBZA_GET  AS 
    SELECT DISTINCT 
        CONCAT(LPAD(CAST(COALESCE(GAZ0_ASEGURADO.ASE_POL_OFNA ,0) AS VARCHAR(2)),2,'0'), 
		       LPAD(CAST(COALESCE(GAZ0_ASEGURADO.ASE_POL_NUM,0) AS VARCHAR(6)),6,'0')) AS NUM_POLIZA,
        CONCAT(LPAD(CAST(COALESCE(GAZ0_ASEGURADO.POL_OFI_RENOVAC ,0) AS VARCHAR(2)),2,'0'), 
		       LPAD(CAST(COALESCE(GAZ0_ASEGURADO.POL_NUM_RENOVAC,0) AS VARCHAR(6)),6,'0')) AS NUM_POLIZA_COBRANZA,
        CONCAT(NVL(GAZ0_ASEGURADO.ASE_NUM_CERTIF, ''), NVL(GAZ0_ASEGURADO.ASE_CVE_PARIEN, '')) AS CVE_CLIENTE_ORIGEN,
        GAZ0_ASEGURADO.ASE_PAT AS APELLIDO_PATERNO,
        GAZ0_ASEGURADO.ASE_MAT AS APELLIDO_MATERNO,
        CONCAT(NVL(TRIM(GAZ0_ASEGURADO.ASE_NOMBRE1), ''), " ", NVL(TRIM(GAZ0_ASEGURADO.ASE_NOMBRE2),'')) AS NOMBRE,
        GAZ0_ASEGURADO.ASE_FEC_ALTA AS FCH_ALTA,
        GAZ0_ASEGURADO.ASE_FEC_BAJA AS FCH_BAJA,
        GAZ0_ASEGURADO.ASE_FEC_ANTIGUEDAD AS FCH_ANTIGUEDAD_NAC,
        GAZ0_ASEGURADO.ASE_FEC_ANTIG_EXT AS FCH_ANTIGUEDAD_INT,
        GAZ0_ASEGURADO.ASE_FEC_NAC AS FCH_NACIMIENTO,
        TRIM(GAZ0_ASEGURADO.ASE_SEXO) AS CVE_SEXO,
        TRIM(GAZ0_ASEGURADO.DES_SEXO) AS DES_SEXO,
        TRIM(GAZ0_ASEGURADO.RFC) AS RFC,
        GAZ0_ASEGURADO.CODIGO_POSTAL AS CODIGO_POSTAL,
        (cast(substr(cast(pol_fec_ini_vig   as string),1,4)as int) - cast(substr(cast(ASE_FEC_NAC  as string),1,4)as int)) AS EDAD_EQUIVALENTE,
        TRIM(GAZ0_ASEGURADO.ASE_STATUS) AS CVE_ESTATUS,
		CAST(GAZ0_ASEGURADO.END_FECHA_INI AS INT) AS END_FECHA_INI,
        GAZ0_ASEGURADO.END_STATUS,
        CAT.cve_subsubcuenta AS CVE_COBERTURA_CONTABLE,
        CAT.subsubcuenta  as DES_COBERTURA_CONTABLE,
        GAZ0_ASEGURADO.FCH_ANTIGUEDAD_INT_OT_CIA,
        GAZ0_ASEGURADO.FCH_ANTIGUEDAD_NAC_OT_CIA,
		TRIM(GAZ0_ASEGURADO.ASE_CVE_PARIEN) AS IND_RELACION,
		GAZ0_POLIZA.POL_NUM_TIPO
		-- FROM BDDLTRN.STG_CNM_TRANSPOSE_DATOS_ADICIONALES_ASEGURADO AS GAZ0_ASEGURADO
                   FROM BDDLTRN.STG_CNM_TRANSPOSE_DATOS_ADICIONALES_ASEGURADO_DISTINCT AS GAZ0_ASEGURADO
		INNER JOIN --BDDLCRU.GAZ0_POLIZA AS GAZ0_POLIZA
                (
                    SELECT 
                            POL_OFI_RENOVAC
                            ,END_NUM_CONSEC
                            ,POL_NUM_RENOVAC
                            ,POL_NUM_TIPO
                            ,POL_SRAMO_CONT
                            ,pol_fec_ini_vig
                    FROM BDDLCRU.GAZ0_POLIZA      
                     where end_num_consec = 0                   
                    UNION ALL                        
                    SELECT 
                                HISP_OFI_RENOVAC AS  POL_OFI_RENOVAC
                                ,END_NUM_CONSEC AS  END_NUM_CONSEC
                                ,HISP_NUM_RENOVAC AS  POL_NUM_RENOVAC
                                ,HISP_NUM_TIPO AS  POL_NUM_TIPO
                                ,HISP_SRAMO_CONT AS  POL_SRAMO_CONT
                                ,hisp_fec_ini_vig AS pol_fec_ini_vig
                    FROM  BDDLCRU.GAZ0_HISPOLIZA   
                    where end_num_consec = 0    
                )AS GAZ0_POLIZA
    
            ON GAZ0_ASEGURADO.POL_OFI_RENOVAC = GAZ0_POLIZA.POL_OFI_RENOVAC
            AND GAZ0_ASEGURADO.POL_NUM_RENOVAC = GAZ0_POLIZA.POL_NUM_RENOVAC
            AND GAZ0_ASEGURADO.END_NUM_CONSEC = GAZ0_POLIZA.END_NUM_CONSEC
    LEFT JOIN

     ( select cve_unidad_negocio,cve_subsubcuenta,subsubcuenta
       from bddlcru.con_cat_subsubcuenta 
       where cve_unidad_negocio='G'
       )as CAT
       ON  cast(CAT.cve_subsubcuenta as string) = cast(GAZ0_POLIZA.POL_SRAMO_CONT as string) ;
      
      

--ASIGNACION DE RELACION
--    CASO 535,536,548,555
DROP TABLE IF EXISTS BDDLTRN.STG_GMM_ASEG_AD_CBZA_RELACION PURGE;
CREATE TABLE IF NOT EXISTS BDDLTRN.STG_GMM_ASEG_AD_CBZA_RELACION  AS
SELECT NUM_POLIZA, NUM_POLIZA_COBRANZA, CVE_CLIENTE_ORIGEN,	APELLIDO_PATERNO,APELLIDO_MATERNO,NOMBRE,
		FCH_ALTA, FCH_BAJA, FCH_ANTIGUEDAD_NAC,	FCH_ANTIGUEDAD_INT,	FCH_NACIMIENTO,RFC,CODIGO_POSTAL,EDAD_EQUIVALENTE,
		CVE_SEXO,DES_SEXO, CVE_ESTATUS,END_FECHA_INI,END_STATUS, CVE_COBERTURA_CONTABLE,DES_COBERTURA_CONTABLE,IND_RELACION,
                FCH_ANTIGUEDAD_INT_OT_CIA,FCH_ANTIGUEDAD_NAC_OT_CIA,
		CASE 
			WHEN IND_RELACION IN ('2','4')
			THEN 'T-TITULAR'
			ELSE 'D-DEPENDIENTE'
		END AS IND_TITULAR_DEPENDIENTE,
		CASE 
			WHEN IND_RELACION IN ('2','4')
			THEN 'TITULAR'
			ELSE 'OTROS'
		END AS RELACION
              
FROM BDDLTRN.STG_GMM_ASEG_AD_CBZA_GET
WHERE POL_NUM_TIPO IN (535,536,548,555)
UNION ALL
-- CASO DIFERENTE
SELECT NUM_POLIZA, NUM_POLIZA_COBRANZA, CVE_CLIENTE_ORIGEN,	APELLIDO_PATERNO,APELLIDO_MATERNO,NOMBRE,
		FCH_ALTA, FCH_BAJA, FCH_ANTIGUEDAD_NAC,	FCH_ANTIGUEDAD_INT,	FCH_NACIMIENTO,RFC,CODIGO_POSTAL,EDAD_EQUIVALENTE,
		CVE_SEXO,DES_SEXO, CVE_ESTATUS,END_FECHA_INI,END_STATUS, CVE_COBERTURA_CONTABLE,DES_COBERTURA_CONTABLE,IND_RELACION,
                FCH_ANTIGUEDAD_INT_OT_CIA,FCH_ANTIGUEDAD_NAC_OT_CIA,
		CASE 
		 WHEN IND_RELACION ='A'
		 THEN 'T-TITULAR'
		 ELSE 'D-DEPENDIENTE'
		END AS IND_TITULAR_DEPENDIENTE,
		CASE 
       			WHEN IND_RELACION = ('A')
       			THEN 'TITULAR'
       			WHEN IND_RELACION = ('B')
       			THEN 'CONYUGUE'
       			WHEN IND_RELACION = ('C')
       			THEN 'HIJO/HIJA'
       			WHEN IND_RELACION = ('D')
       			THEN 'HIJO/HIJA'
       			WHEN IND_RELACION = ('E')
       			THEN 'HIJO/HIJA'
       			WHEN IND_RELACION = ('M')
       			THEN 'MADRE'
       			WHEN IND_RELACION = ('P')
       			THEN 'PADRE'
       			WHEN IND_RELACION = ('Z')
       			THEN 'CONCUBINO(A)'
       			ELSE 'OTROS'
		END AS RELACION
FROM BDDLTRN.STG_GMM_ASEG_AD_CBZA_GET
WHERE POL_NUM_TIPO NOT IN (535,536,548,555) OR POL_NUM_TIPO IS NULL;




