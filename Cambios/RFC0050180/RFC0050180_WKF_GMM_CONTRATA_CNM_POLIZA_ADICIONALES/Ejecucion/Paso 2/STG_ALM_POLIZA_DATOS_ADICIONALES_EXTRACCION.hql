set hive.vectorized.execution=true;
set hive.vectorized.execution.enabled=true;
set hive.vectorized.execution.reduce.enabled=true;
set hive.exec.dynamic.partition = true;
set hive.exec.dynamic.partition.mode = nonstrict;
set hive.cbo.enable=true;
set hive.compute.query.using.stats=true;
set hive.stats.fetch.column.stats=true;
set hive.stats.fetch.partition.stats=true;
set hive.auto.convert.join=true;
set hive.auto.convert.join.noconditionaltask=true;
set hive.auto.convert.join.noconditionaltask.size=20971520;
set hive.auto.convert.join.use.nonstaged=true;
set hive.mapjoin.smalltable.filesize = 30000000;
set hive.ignore.mapjoin.hint=true;
set mapred.job.priority=VERY_HIGH;
INSERT OVERWRITE TABLE BDDLTRN.STG_ALM_POLIZA_DATOS_ADICIONALES_DELTA
    SELECT /*+ MAPJOIN(CAT_CIRCULOS_MEDICOS), MAPJOIN(CAT_CLAVE_EXPERIENCIA_POLIZA), MAPJOIN(CAT_CANAL_COBRO_INICIAL), MAPJOIN(CAT_CANAL_COBRO_SUCESIVO), MAPJOIN(CAT_FORMA_PAGO_DIVIDENDO) */
        CNM_POLIZA.NUM_POLIZA, 
        CNM_POLIZA.VIGENCIA_POLIZA,
        CNM_POLIZA.NUM_VERSION_POLIZA,
        '' AS NUM_POLIZA_COBRANZA,
        'INFO' AS CVE_SISTEMA,
        'INFO' AS CVE_SISTEMA_INT,
        NVL(CAT_CIRCULOS_MEDICOS.CVE_HOMOLOGADA, '') AS CVE_CIRCULO_MEDICO_CONTRATADO,
        IF(TRIM(CAT_CIRCULOS_MEDICOS.CVE_HOMOLOGADA) = '' OR CAT_CIRCULOS_MEDICOS.CVE_HOMOLOGADA IS NULL, '', NVL(CAT_CIRCULOS_MEDICOS.DES_HOMOLOGADA, CONCAT('Descripción no encontrada para: ', GMM_ELEMENTO_POLIZA.INTABULA))) AS DES_CIRCULO_MEDICO_CONTRATADO,
        NVL(GMM_ELEMENTO_POLIZA.TCSEGPLA, '') AS CVE_SEGMENTO_PLAN,
        IF(TRIM(GMM_ELEMENTO_POLIZA.TCSEGPLA) = '' OR GMM_ELEMENTO_POLIZA.TCSEGPLA IS NULL, '', NVL(GMM_ELEMENTO_POLIZA.DES_TCSEGPLA, CONCAT('Descripción no encontrada para: ', GMM_ELEMENTO_POLIZA.TCSEGPLA))) AS DES_SEGMENTO_PLAN,
        NVL(GMM_ELEMENTO_POLIZA.INCABRAM, '') AS CVE_INDICADOR_CAMBIO_GPO_IND,
        IF(TRIM(GMM_ELEMENTO_POLIZA.INCABRAM) = '' OR GMM_ELEMENTO_POLIZA.INCABRAM IS NULL, '', NVL(GMM_ELEMENTO_POLIZA.DES_INCABRAM, CONCAT('Descripción no encontrada para: ', GMM_ELEMENTO_POLIZA.INCABRAM))) AS DES_INDICADOR_CAMBIO_GPO_IND,
        NVL(GMM_ELEMENTO_POLIZA.CDNUPOAN, '') AS NUM_POLIZA_ANTERIOR,
        NVL(GMM_ELEMENTO_POLIZA.INESQUEM, '') AS CVE_ESQUEMA,
        IF(TRIM(GMM_ELEMENTO_POLIZA.INESQUEM) = '' OR GMM_ELEMENTO_POLIZA.INESQUEM IS NULL, '', NVL(GMM_ELEMENTO_POLIZA.DES_INESQUEM, CONCAT('Descripción no encontrada para: ', GMM_ELEMENTO_POLIZA.INESQUEM))) AS DES_ESQUEMA,
        NVL(CAT_CLAVE_EXPERIENCIA_POLIZA.CVE_HOMOLOGADA, '') AS CVE_EXPERIENCIA,
        IF(TRIM(CAT_CLAVE_EXPERIENCIA_POLIZA.CVE_HOMOLOGADA) = '' OR CAT_CLAVE_EXPERIENCIA_POLIZA.CVE_HOMOLOGADA IS NULL, '', NVL(CAT_CLAVE_EXPERIENCIA_POLIZA.DES_HOMOLOGADA, CONCAT('Descripción no encontrada para: ', GMM_ELEMENTO_POLIZA.INEXPERI))) AS DES_EXPERIENCIA,
        NVL(GMM_ELEMENTO_POLIZA.TCTIDEDU, '') AS CVE_TIPO_DEDUCIBLE,
        IF(TRIM(GMM_ELEMENTO_POLIZA.TCTIDEDU) = '' OR GMM_ELEMENTO_POLIZA.TCTIDEDU IS NULL, '', NVL(GMM_ELEMENTO_POLIZA.DES_TCTIDEDU, CONCAT('Descripción no encontrada para: ', GMM_ELEMENTO_POLIZA.TCTIDEDU))) AS DES_TIPO_DEDUCIBLE,
        NVL(GMM_ELEMENTO_POLIZA.CDDESCTO, '') AS CVE_DESCUENTO,
        IF(TRIM(GMM_ELEMENTO_POLIZA.CDDESCTO) = '' OR GMM_ELEMENTO_POLIZA.CDDESCTO IS NULL, '', NVL(GMM_ELEMENTO_POLIZA.DES_CDDESCTO, CONCAT('Descripción no encontrada para: ', GMM_ELEMENTO_POLIZA.CDDESCTO))) AS DES_DESCUENTO,
        NVL(GMM_ELEMENTO_POLIZA.PODESPOL, 0.0) AS PCT_DESCUENTO,
        NVL(GMM_ELEMENTO_POLIZA.POREDE03, 0.0) AS PCT_DESCUENTO_COMERCIAL,
        IF(GMM_ELEMENTO_POLIZA.CDPOLCSF = '' OR GMM_ELEMENTO_POLIZA.CDPOLCSF IS NULL, 'NO', 'SI') AS BAN_POLIZA_CASH_FLOW,
        NVL(GMM_ELEMENTO_POLIZA.CDPOLCSF, '') AS NUM_POLIZA_CASH_FLOW,
        NVL(GMM_ELEMENTO_POLIZA.CDPLCSFE, '') AS NUM_POLIZA_FONDO_ESPECIAL,
        NVL(GMM_ELEMENTO_POLIZA.CDPOLSTP, '') AS NUM_POLIZA_STOP_LOSS,
        CASE WHEN CNM_POLIZA.CVE_PROD_TECNICO = 'G0300ESP' THEN NVL(GMM_ELEMENTO_POLIZA.CDADMFON, '') ELSE '' END AS CVE_FONDO_ADMON_PERDIDA,
        CASE WHEN CNM_POLIZA.CVE_PROD_TECNICO = 'G0300ESP' THEN IF(TRIM(GMM_ELEMENTO_POLIZA.CDADMFON) = '' OR GMM_ELEMENTO_POLIZA.CDADMFON IS NULL, '', NVL(GMM_ELEMENTO_POLIZA.DES_CDADMFON, CONCAT('Descripción no encontrada para: ', GMM_ELEMENTO_POLIZA.CDADMFON))) ELSE '' END AS DES_FONDO_ADMON_PERDIDA,
        NVL(GMM_ELEMENTO_POLIZA.CDTIPNEG, '') AS CVE_TIPO_NEGOCIO,
        IF(TRIM(GMM_ELEMENTO_POLIZA.CDTIPNEG) = '' OR GMM_ELEMENTO_POLIZA.CDTIPNEG IS NULL, '', NVL(GMM_ELEMENTO_POLIZA.DES_CDTIPNEG, CONCAT('Descripción no encontrada para: ', GMM_ELEMENTO_POLIZA.CDTIPNEG))) AS DES_TIPO_NEGOCIO,
        NVL(GMM_ELEMENTO_POLIZA.DES_INCOBCEE, '') AS BAN_CEE,
        NVL(GMM_ELEMENTO_POLIZA.DES_INCOCECE, '') AS BAN_CECE,
        NVL(GMM_ELEMENTO_POLIZA.DES_INPOLCSF, '') AS BAN_SALUD_FAMILIAR,
        IF(GMM_ELEMENTO_POLIZA.CDPERCSF = '', 0, CAST(NVL(GMM_ELEMENTO_POLIZA.CDPERCSF, 0) AS INT)) AS ANIOS_SALUD_FAMILIAR_RESTANTES,
        NVL(GMM_ELEMENTO_POLIZA.DSNEGEMP, '') AS NUM_POLIZA_PROVIENE,
        NVL(GMM_ELEMENTO_POLIZA.DES_INFORPAG, '') AS BAN_NUEVA_FORMA_PAGO,
        NVL(GMM_ELEMENTO_POLIZA.TCTISUAS, '') AS CVE_TIPO_SUMA_ASEGURADA,
        IF(TRIM(GMM_ELEMENTO_POLIZA.TCTISUAS) = '' OR GMM_ELEMENTO_POLIZA.TCTISUAS IS NULL, '', NVL(GMM_ELEMENTO_POLIZA.DES_TCTISUAS, CONCAT('Descripción no encontrada para: ', GMM_ELEMENTO_POLIZA.TCTISUAS))) AS DES_TIPO_SUMA_ASEGURADA,
        NVL(GMM_ELEMENTO_POLIZA.DES_INCOCAMI, '') AS BAN_CAMI,
        NVL(GMM_ELEMENTO_POLIZA.DES_INCOBCED, '') AS BAN_CDA,
        NVL(GMM_ELEMENTO_POLIZA.DES_INCOBALI, '') AS BAN_CAHL,
        NVL(GMM_ELEMENTO_POLIZA.DES_INCOBADE, '') AS BAN_CAHD,
        NVL(GMM_ELEMENTO_POLIZA.DES_INCOBCEN, '') AS BAN_CECN,
        NVL(GMM_ELEMENTO_POLIZA.DES_INRECNAC, '') AS BAN_RN,
        CASE WHEN CNM_COBERTURA_DATOS_ADICIONALES.BAN_COASEGURO_CERO = 0 THEN 'NO' ELSE 'SI' END AS BAN_COASEGURO_CERO,
        CNM_ASEGURADO_DATOS_ADICIONALES.NUM_ASEG_DEPENDIENTES AS NUM_ASEG_DEPENDIENTES,
        CNM_ASEGURADO_DATOS_ADICIONALES.NUM_ASEG_TITULARES AS NUM_ASEG_TITULARES,
        IF(GMM_ELEMENTO_POLIZA.CDTIPPOL = 'SF' OR GMM_ELEMENTO_POLIZA.CDTIPPOL IS NULL, 'SI', 'NO') AS BAN_SOLIDEZ_FAMILIAR,
        NVL(GMM_ELEMENTO_POLIZA.INTIPADM, '') AS CVE_ADMON_POLIZA,
        IF(TRIM(GMM_ELEMENTO_POLIZA.INTIPADM) = '' OR GMM_ELEMENTO_POLIZA.INTIPADM IS NULL, '', NVL(GMM_ELEMENTO_POLIZA.DES_INTIPADM, CONCAT('Descripción no encontrada para: ', GMM_ELEMENTO_POLIZA.INTIPADM))) AS DES_ADMON_POLIZA,
        NVL(GMM_ELEMENTO_POLIZA.DES_INELCOAN, '') AS BAN_ELEGIBILIDAD,
        NVL(GMM_ELEMENTO_POLIZA.NUANPAPR, 0) AS ANIOS_PAGO_COMISION,
        CASE WHEN GMM_ELEMENTO_POLIZA.FEFECREG = 0.000 OR GMM_ELEMENTO_POLIZA.FEFECREG IS NULL THEN CAST('1400-01-01 00:00:00' AS TIMESTAMP) ELSE CAST(FROM_UNIXTIME(UNIX_TIMESTAMP(CAST(CAST(GMM_ELEMENTO_POLIZA.FEFECREG AS INT) AS VARCHAR(8)), 'yyyyMMdd')) AS TIMESTAMP) END AS FCH_REGISTRO_PRODUCTO,
        NVL(GMM_ELEMENTO_POLIZA.CDNUMFEC, '') AS NUM_REGISTRO_PRODUCTO,
        NVL(CAT_CANAL_COBRO_INICIAL.CVE_HOMOLOGADA, '') AS CVE_CANAL_COBRO_INICIAL,
        IF(TRIM(CAT_CANAL_COBRO_INICIAL.CVE_HOMOLOGADA) = '' OR CAT_CANAL_COBRO_INICIAL.CVE_HOMOLOGADA IS NULL, '', NVL(CAT_CANAL_COBRO_INICIAL.DES_HOMOLOGADA, CONCAT('Descripción no encontrada para: ', KCIM06T.TCCANCO1))) AS DES_CANAL_COBRO_INICIAL,
        NVL(CAT_CANAL_COBRO_SUCESIVO.CVE_HOMOLOGADA, '') AS CVE_CANAL_COBRO_SUCESIVO,
        IF(TRIM(CAT_CANAL_COBRO_SUCESIVO.CVE_HOMOLOGADA) = '' OR CAT_CANAL_COBRO_SUCESIVO.CVE_HOMOLOGADA IS NULL, '', NVL(CAT_CANAL_COBRO_SUCESIVO.DES_HOMOLOGADA, CONCAT('Descripción no encontrada para: ', KCIM06T.TCCANCOS))) AS DES_CANAL_COBRO_SUCESIVO,
        NVL(KCIM06T.INDIVIDE, '') AS CVE_INDICADOR_DIVIDENDO,
        IF(TRIM(KCIM06T.INDIVIDE) = '' OR KCIM06T.INDIVIDE IS NULL, '', NVL(TRIM(CAT_INDICADOR_DIVIDENDO.DSELEMEN), CONCAT('Descripción no encontrada para: ', KCIM06T.INDIVIDE))) AS DES_INDICADOR_DIVIDENDO,
        NVL(CAT_FORMA_PAGO_DIVIDENDO.CVE_HOMOLOGADA, '') AS CVE_FORMA_PAGO_DIVIDENDO,
        IF(TRIM(CAT_FORMA_PAGO_DIVIDENDO.CVE_HOMOLOGADA) = '' OR CAT_FORMA_PAGO_DIVIDENDO.CVE_HOMOLOGADA IS NULL, '', NVL(CAT_FORMA_PAGO_DIVIDENDO.DES_HOMOLOGADA, CONCAT('Descripción no encontrada para: ', KCIM06T.TCFORPAG))) AS DES_FORMA_PAGO_DIVIDENDO,
        NVL(KCIM06T.POFACDIV, 0.0) AS PCT_FACTOR_DIVIDENDO,
        NVL(KCIM06T.POFACPRI, 0.0) AS PCT_FACTOR_PRIMA,
        NVL(KCIM06T.POFACCOM, 0.0) AS PCT_FACTOR_COMISION,
        NVL(KCIM06T.POFACSIN, 0.0) AS PCT_FACTOR_SINIESTROS,
        NVL(KCIM06T.POFACGIA, 0.0) AS PCT_FACTOR_GIA,
        NVL(KCIM06T.DUCONTRA, '') AS CVE_DURACION,
        IF(TRIM(KCIM06T.DUCONTRA) = '' OR KCIM06T.DUCONTRA IS NULL, '', NVL(TRIM(CAT_DURACION.DSELEMEN), CONCAT('Descripción no encontrada para: ', KCIM06T.DUCONTRA))) AS DES_DURACION,
        NVL(GMM_ELEMENTO_POLIZA.CDNUMREC, '') AS REGISTRO_PRODUCTO_RECAS,
        NVL(GMM_ELEMENTO_POLIZA.DES_INREFRMA, '') AS BAN_RPF_MANUAL,
        NVL(GMM_ELEMENTO_POLIZA.PORECFRA, 0.0) AS PCT_RPF_MANUAL,
        IF(CNM_POLIZA.CLAVE_INTERMEDIARIO_PRINCIPAL = '54864' OR TRIM(GMM_ELEMENTO_POLIZA.TCSEGPLA) IN ('15','18') OR TRIM(CNM_POLIZA.CVE_TIPO_POLIZA) IN ('PV'), 'SI', 'NO') AS BAN_VOLUNTARIOS,
        NVL(GMM_ELEMENTO_POLIZA.INDNEGLI, '') AS CVE_INDICADOR_NEGOCIO_LICITADO,
        IF(TRIM(GMM_ELEMENTO_POLIZA.INDNEGLI) = '' OR GMM_ELEMENTO_POLIZA.INDNEGLI IS NULL, '', NVL(GMM_ELEMENTO_POLIZA.DES_INDNEGLI, CONCAT('Descripción no encontrada para: ', GMM_ELEMENTO_POLIZA.INDNEGLI))) AS DES_INDICADOR_NEGOCIO_LICITADO,
        CASE WHEN TRIM(NVL(KCIM06T.INPOLPAI, '')) IN ('N', '') THEN 'SI' ELSE 'NO' END AS BAN_AFECTA_PAI,
        NVL(GMM_ELEMENTO_POLIZA.DES_INNEGMUL, '') AS BAN_NEGOCIO_MULTINACIONAL,
        NVL(GMM_ELEMENTO_POLIZA.NUASEGCA, 0) AS NUM_ASEGURADOS_CONTRATO,
        NVL(GMM_ELEMENTO_POLIZA.DES_INPOLPRE, '') AS BAN_POLIZA_PRESTACION_EMPLEADO,
        NVL(GMM_ELEMENTO_POLIZA.TCELEGIB, '') AS CVE_ELEGIBILIDAD,
        IF(TRIM(GMM_ELEMENTO_POLIZA.TCELEGIB) = '' OR GMM_ELEMENTO_POLIZA.TCELEGIB IS NULL, '', NVL(GMM_ELEMENTO_POLIZA.DES_TCELEGIB, CONCAT('Descripción no encontrada para: ', GMM_ELEMENTO_POLIZA.TCELEGIB))) AS DES_ELEGIBILIDAD,
        NVL(GMM_ELEMENTO_POLIZA.DES_INIMPRIM, '') AS BAN_IMPRIME_CONVERSION
    FROM BDDLALM.ALM_POLIZA AS CNM_POLIZA
------------------------COMENTAR PARA CARGA INICIAL------------------------
    --INNER JOIN (
    --    SELECT MAX(TO_DATE(TS_ALTA_HDFS)) AS TS_ALTA_HDFS FROM BDDLALM.ALM_POLIZA
    --    ) AS CNM_POLIZA_DELTA ON TO_DATE(CNM_POLIZA.TS_ALTA_HDFS) = CNM_POLIZA_DELTA.TS_ALTA_HDFS
---------------------------------------------------------------------------
    INNER JOIN BDDLCRU.KCIM06T AS KCIM06T ON CNM_POLIZA.NUM_POLIZA = KCIM06T.CDNUMPOL AND CNM_POLIZA.NUM_VERSION_POLIZA = KCIM06T.CTVRSPOL
    INNER JOIN (
        SELECT * FROM BDDLALM.GMM_ELEMENTO_POLIZA 
        UNION ALL 
        SELECT * FROM BDDLALM.GMM_ELEMENTO_POLIZA_RELLENO
        ) AS GMM_ELEMENTO_POLIZA ON CNM_POLIZA.NUM_POLIZA = GMM_ELEMENTO_POLIZA.NUM_POLIZA AND CNM_POLIZA.NUM_VERSION_POLIZA = GMM_ELEMENTO_POLIZA.NUM_VERSION 
    INNER JOIN (
        SELECT NUM_POLIZA, VIGENCIA_POLIZA, NUM_VERSION_POLIZA, SUM(CASE TRIM(CVE_TITULAR_DEPENDIENTE) WHEN 'T' THEN 1 ELSE 0 END) AS NUM_ASEG_TITULARES, SUM(CASE TRIM(CVE_TITULAR_DEPENDIENTE) WHEN 'D' THEN 1 ELSE 0 END) AS NUM_ASEG_DEPENDIENTES FROM BDDLALM.ALM_ASEGURADO_DATOS_ADICIONALES WHERE CVE_SISTEMA = 'INFO' GROUP BY NUM_POLIZA, VIGENCIA_POLIZA, NUM_VERSION_POLIZA
        ) AS CNM_ASEGURADO_DATOS_ADICIONALES ON CNM_POLIZA.NUM_POLIZA = CNM_ASEGURADO_DATOS_ADICIONALES.NUM_POLIZA AND CNM_POLIZA.NUM_VERSION_POLIZA = CNM_ASEGURADO_DATOS_ADICIONALES.NUM_VERSION_POLIZA 
    INNER JOIN (
        SELECT NUM_POLIZA, VIGENCIA_POLIZA, NUM_VERSION_POLIZA, COUNT(CASE TRIM(DES_COASEGURO) WHEN '0%' THEN 1 ELSE 0 END) AS BAN_COASEGURO_CERO FROM BDDLALM.ALM_COBERTURA_DATOS_ADICIONALES WHERE CVE_SISTEMA = 'INFO' AND CVE_COBERTURA_CONTRATADA = '0000001119' GROUP BY NUM_POLIZA, VIGENCIA_POLIZA, NUM_VERSION_POLIZA
        ) AS CNM_COBERTURA_DATOS_ADICIONALES ON CNM_POLIZA.NUM_POLIZA = CNM_COBERTURA_DATOS_ADICIONALES.NUM_POLIZA AND CNM_POLIZA.NUM_VERSION_POLIZA = CNM_COBERTURA_DATOS_ADICIONALES.NUM_VERSION_POLIZA 
    LEFT JOIN BDDLALM.CAT_HOMOLOGADOS AS CAT_CIRCULOS_MEDICOS 
		ON GMM_ELEMENTO_POLIZA.INTABULA = CAT_CIRCULOS_MEDICOS.CVE_ATRIBUTO_ORG AND CAT_CIRCULOS_MEDICOS.NOMBRE_CATALOGO = 'CAT_CIRCULOS_MEDICOS' AND CAT_CIRCULOS_MEDICOS.CVE_RAMO = 'SA' AND CAT_CIRCULOS_MEDICOS.CVE_SISTEMA = 'INFO'
    LEFT JOIN BDDLALM.CAT_HOMOLOGADOS AS CAT_CLAVE_EXPERIENCIA_POLIZA 
		ON GMM_ELEMENTO_POLIZA.INEXPERI = CAT_CLAVE_EXPERIENCIA_POLIZA.CVE_ATRIBUTO_ORG AND CAT_CLAVE_EXPERIENCIA_POLIZA.NOMBRE_CATALOGO = 'CAT_CLAVE_EXPERIENCIA_POLIZA' AND CAT_CLAVE_EXPERIENCIA_POLIZA.CVE_RAMO = 'SA' AND CAT_CLAVE_EXPERIENCIA_POLIZA.CVE_SISTEMA = 'INFO'
    LEFT JOIN BDDLALM.CAT_HOMOLOGADOS AS CAT_CANAL_COBRO_INICIAL 
		ON KCIM06T.TCCANCO1 = CAT_CANAL_COBRO_INICIAL.CVE_ATRIBUTO_ORG AND CAT_CANAL_COBRO_INICIAL.NOMBRE_CATALOGO = 'CAT_CANAL_COBRO' AND CAT_CANAL_COBRO_INICIAL.CVE_RAMO = 'SA' AND CAT_CANAL_COBRO_INICIAL.CVE_SISTEMA = 'INFO'
    LEFT JOIN BDDLALM.CAT_HOMOLOGADOS AS CAT_CANAL_COBRO_SUCESIVO 
		ON KCIM06T.TCCANCOS = CAT_CANAL_COBRO_SUCESIVO.CVE_ATRIBUTO_ORG AND CAT_CANAL_COBRO_SUCESIVO.NOMBRE_CATALOGO = 'CAT_CANAL_COBRO' AND CAT_CANAL_COBRO_SUCESIVO.CVE_RAMO = 'SA' AND CAT_CANAL_COBRO_SUCESIVO.CVE_SISTEMA = 'INFO'
    LEFT JOIN BDDLCRU.KTCTGET AS CAT_INDICADOR_DIVIDENDO 
		ON KCIM06T.INDIVIDE = TRIM(CAT_INDICADOR_DIVIDENDO.CDELEMEN) AND TRIM(CAT_INDICADOR_DIVIDENDO.CDIDIOMA) = 'ES' AND TRIM(CAT_INDICADOR_DIVIDENDO.CDTABLA) = 'KCIT51G' AND TRIM(CAT_INDICADOR_DIVIDENDO.CDEMPRES) = '0001'
    LEFT JOIN BDDLALM.CAT_HOMOLOGADOS AS CAT_FORMA_PAGO_DIVIDENDO 
		ON TRIM(KCIM06T.TCFORPAG) = CAT_FORMA_PAGO_DIVIDENDO.CVE_ATRIBUTO_ORG AND CAT_FORMA_PAGO_DIVIDENDO.NOMBRE_CATALOGO = 'CAT_FORMA_PAGO' AND CAT_FORMA_PAGO_DIVIDENDO.CVE_RAMO = 'SA' AND CAT_FORMA_PAGO_DIVIDENDO.CVE_SISTEMA = 'INFO'
    LEFT JOIN BDDLCRU.KTCTGET AS CAT_DURACION 
		ON KCIM06T.DUCONTRA = TRIM(CAT_DURACION.CDELEMEN) AND TRIM(CAT_DURACION.CDIDIOMA) = 'ES' AND TRIM(CAT_DURACION.CDTABLA) = 'KCIT37G' AND TRIM(CAT_DURACION.CDEMPRES) = '0001'
WHERE CNM_POLIZA.CVE_SISTEMA = 'INFO';
